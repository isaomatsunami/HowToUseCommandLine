# コマンドライン講義シナリオ

# テスクトップにtestというフォルダを作り、Githubのファイルを展開して中に入れる
# (windowsの場合) test内にbusyBoxを置く
# 画面の左にフォルダを開いた状態で、右半分にターミナルを配置

# フォルダに移動する
cd Desktop
ls
cd test

# (windowsの場合)busyBox.exe bashを実行する

# 自分の位置を知る
pwd

# 以下のコマンドを説明なしで実行してもらい
echo 'Hello' > test.txt
# ファイルの中身を見るコマンドも後で説明する
cat test.txt

# フォルダにファイルが作られたことを確認する

# ディレクトリを作る
mkdir temp

# ファイルリストを見る。aはall、lは詳細形式
ls
ls -a
ls -l

# Rオプションは再帰的、rオプションは逆順なので注意

ls -R

# ディレクトリを移動するにはcd
cd temp
pwd
ls -a

# .は現在のフォルダ（カレントディレクトリともいう）、..は一つ上のフォルダを意味する特殊記号
#️⃣　bashの履歴機能を使って、ファイルを作成する
echo 'Hello' > test.txt
ls

#️ 一つ上の階層に移動する
cd ..
pwd

## ファイルの操作
# ファイルの消去（ゴミ箱にも残らないので注意！）
rm test.txt
ls

# 今度はhelloという名前でファイルを作る
echo 'Hello' > hello.txt

# ファイル名を移動させる
mv hello.txt temp
cd temp
ls

# ファイル名を変える場合もmvを使う
mv test.txt new.txt
ls

# ファイルをコピーする場合
cp new.txt copy.txt

# コマンドラインの怖さは、GUIと異なり、警告が出ないことだ
# 名前を変更する場合、変更先が既存ファイルだと上書きしてしまう
mv copy.txt hello.txt
ls

# ..はいつでも使えるので、上の階層にファイルを移動することもできる
mv hello.txt ..
ls
cd ..

# フォルダを削除する
rmdir temp

# 中身があると削除できない。中身ごと削除するにはrオプションつきでrmする
rm -r temp

# 体操
mkdir temp
cd temp
copy ../hello.txt new.txt
cd ..
rm -r temp

# フォルダのrenameもmvでできる
mv HowToUseCommandLine howto

cd howto
ls
cd etude1

# address2016.txtのコピーを二つ上の階層に持っていきたい
cp address2016.txt ../..
cd ../..
ls

## ファイルの読み書き
# echoは標準出力に書き出す。標準出力とは通常は画面そのもの
# single quoteを使うことに注意！
echo 'Good morning'

# リダイレクトとは標準出力を変更すること
echo 'Good morning' > morning.txt

# catはファイルを標準出力に書き出す
cat morning.txt

# catとリダレクトを使うと実質的にコピーできる
cat morning.txt > new.txt
cat new.txt

# address2016も見てみよう
cat address2016.txt

# 最初と最後だけ見たい場合もおおい
head -n 10 address2016.txt
tail -n 10 address2016.txt

# lessはエディタのように自由に閲覧できる
# エディタと違い、書き換えてしまう恐れがない
# 終了はq（quit）で、hで使い方が表示される
less address2016.txt

# catにはnオプションがある
cat -n address2016.txt

# tailには、+で「n行目以降」の意味がある
tail -n +7857 address2016.txt

## csvファイルの処理

# Ubuntuで日本語を入力するには、Ctrl+Space
echo '巨人,17,13' > baseballC.csv

# 追記リダイレクトは>>
echo '阪神,18,15' >> baseballC.csv
echo '広島,18,15' >> baseballC.csv
echo '中日,16,15' >> baseballC.csv
echo 'ヤクルト,15,18' >> baseballC.csv
echo 'DeNA,12,20' >> baseballC.csv
cat baseballC.csv

# パリーグは表計算ソフトで作ったデータが用意してある
cp howto/baseballP.csv baseballP.csv
cat baseballP.csv

# パイプは、最初のコマンドの標準出力が次のコマンドの入力になる仕組み
echo 'hello' | cat
# 問題はパイプでしか使えないコマンドもある。trがその例
# tr -d 'A'は削除、tr 'A' 'B'はAをBに置換する

echo 'hello' | tr -d 'h'
echo 'hello' | tr 'h' 'H'

# これによって、basballPの引用符を削除する
cat baseballP.csv | tr -d '"' > baseballP_trimmed.csv
cat baseballP_trimmed.csv

# catは複数のファイルをとることができる
cat baseballC.csv baseballP_trimmed.csv
cat baseballC.csv baseballP_trimmed.csv > baseball.csv
cat baseball.csv

# ソートする
sort baseball.csv
# sortコマンドは、tオプションで区切り文字、kで対象列（最初と最後を指定）
sort -t',' -k 3,3 baseball.csv
# 文字列扱いされている！ nオプションで数字扱いしてくれる
sort -t',' -nk 3,3 baseball.csv

# 勝利数順にするには
sort -t',' -nk 2,2 baseball.csv

# 新しいファイルを導入する
cp howto/manager.csv manager.csv
cat manager.csv
# 引用符をとる
cat manager.csv | tr -d '"' > manager_trimmed.csv
cat manager_trimmed.csv

# pasteは行ごとに結合する
paste baseball.csv manager_trimmed.csv

# 正しく結合させるにはjoinを使う
join -t',' -1 1 -2 1 baseball.csv manager_trimmed.csv

# joinは結合フィールド（列）を事前にソートしていあることが条件だった！
sort -t',' -k 1,1 baseball.csv > baseball_s.csv
sort -t',' -k 1,1 manager_trimmed.csv > manager_s.csv
join -t',' -1 1 -2 1 baseball_s.csv manager_s.csv

## 施政方針演説の単語カウント(オプション)
# mecabがインストールされている必要がある

cp howto/etude1/施政方針演説2016.txt speech2016.txt
mecab speech2016.txt > address2016.csv
# 結論だけ示す
cat address2016.csv | tr ',' ' ' | awk '$2 == "名詞"' | sort -k 8,8 | cut -f 1 | uniq -c | sort

exit 0

## スクリプトとは
# もちろん、こんなことを表計算ソフトでできる。しかし、100万行の場合はこの方法しかない。
# また、以上のコマンドをファイルに書いておくと、一気に実行できる
# このシナリオ自身も実行可能
bash コマンドライン講義シナリオ.sh
# また、このようにメモを書き残せるので、備忘録、引き継ぎ、処理の検証に役立つ
# (GUI操作では偶然の誤操作を検証できない)

# しかし、スクリプトの価値は、プログラムを書くことが一番大きい。
# いかなるプログラム言語と同様、プログラムの効用はループと条件判定に尽きる

# sample01.shは条件判定の一例
bash sample01.sh

# sample06.shは終了コードの例
bash sample06.sh

# loopはループの例

# いずれも実行させてみる（プログラムの雛形として使う）

## 大量ファイルの一括処理
# etude03を紹介する

## 課題

financial_reports.zipを解凍してください。
このファイルが添付されていたメールには
「attached files are protected by your 4-digit PIN」
とありました。


















less address2016.txt












